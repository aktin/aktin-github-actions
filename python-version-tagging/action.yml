name: 'Check Version and Tag'

description: 'Checks Python script for version change and tags previous commit if version changed'

inputs:
  file-path:
    description: 'Path to the file to check for version'
    required: true

  github-token:
    description: 'Token to use to push the new tag'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Get the previous version from the script
      run: |
        PREV_VERSION=$(git show HEAD~1:${{ inputs.file-path }} | grep -oP '(?<=@VERSION=)[0-9.]+')
        echo "Previous version: $PREV_VERSION"
        echo "::set-output name=PREV_VERSION::$PREV_VERSION"
      shell: bash

    - name: Get the current version from the script
      run: |
        CURRENT_VERSION=$(grep -oP '(?<=@VERSION=)[0-9.]+ ${{ inputs.file-path }}')
        echo "Current version: $CURRENT_VERSION"
        echo "::set-output name=CURRENT_VERSION::$CURRENT_VERSION"
      shell: bash

    - name: Tag previous commit if version changed
      if: ${{ steps.get-prev-version.outputs.PREV_VERSION != steps.get-current-version.outputs.CURRENT_VERSION }}
      run: |
        PREV_COMMIT=$(git rev-parse HEAD~1)
        echo "Previous commit: $PREV_COMMIT"
        
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git tag -a "v${{ steps.get-prev-version.outputs.PREV_VERSION }}" -m "Version ${{ steps.get-prev-version.outputs.PREV_VERSION }}" $PREV_COMMIT
        git push origin "v${{ steps.get-prev-version.outputs.PREV_VERSION }}"
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
      shell: bash
