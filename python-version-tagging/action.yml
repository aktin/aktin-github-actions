name: 'Check Version and Tag'

description: 'Checks Python script for version change and tags previous commit if version changed'

inputs:
  file-path:
    description: 'Path to the file to check for version'
    required: true

  github-token:
    description: 'Token to use to push the new tag'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - run: |
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"

        # Parse current version from the Python script
        CURRENT_VERSION=$(grep -oP '(?<=@VERSION=)[^"]*' ${{ inputs.file-path }})

        # Fetch tags from remote to ensure we are up to date
        git fetch --tags
        
        # Check if the tag already exists and matches the current version
        if git rev-parse --quiet --verify "refs/tags/v$CURRENT_VERSION" >/dev/null; then
          echo "Moving tag to the latest commit..."
          git tag -d "v$CURRENT_VERSION"
          git push origin ":refs/tags/v$CURRENT_VERSION" $GITHUB_TOKEN --follow-tags
        fi
        
        # Create a new tag at the latest commit
        echo "Tagging the latest commit..."
        git tag -a "v$CURRENT_VERSION" -m "Version $CURRENT_VERSION"
        git push origin "v$CURRENT_VERSION" --tags $GITHUB_TOKEN --follow-tags
      shell: bash
